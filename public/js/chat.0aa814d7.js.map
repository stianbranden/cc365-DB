{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.ends-with.js","webpack:///./src/views/ChatTranscript.vue?b4d9","webpack:///./src/views/ChatTranscript.vue","webpack:///./src/views/ChatTranscript.vue?d8e2"],"names":["$","uncurryThis","getOwnPropertyDescriptor","f","toLength","toString","notARegExp","requireObjectCoercible","correctIsRegExpLogic","IS_PURE","un$EndsWith","endsWith","slice","min","Math","CORRECT_IS_REGEXP_LOGIC","MDN_POLYFILL_BUG","descriptor","String","prototype","writable","target","proto","forced","searchString","that","this","endPosition","arguments","length","undefined","len","end","search","interval","VUE_APP_API_ROOT","process","route","useRoute","bot","ref","params","chat","transcript","meta","first","getTranscript","watch","_","getLang","code","value","language_code","setInterval","fetch","then","data","json","messages","language","botname","active","clearInterval","__exports__"],"mappings":"wGACA,IAAIA,EAAI,EAAQ,QACZC,EAAc,EAAQ,QACtBC,EAA2B,EAAQ,QAAmDC,EACtFC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAa,EAAQ,QACrBC,EAAyB,EAAQ,QACjCC,EAAuB,EAAQ,QAC/BC,EAAU,EAAQ,QAGlBC,EAAcT,EAAY,GAAGU,UAC7BC,EAAQX,EAAY,GAAGW,OACvBC,EAAMC,KAAKD,IAEXE,EAA0BP,EAAqB,YAE/CQ,GAAoBP,IAAYM,KAA6B,WAC/D,IAAIE,EAAaf,EAAyBgB,OAAOC,UAAW,YAC5D,OAAOF,IAAeA,EAAWG,SAF8B,GAOjEpB,EAAE,CAAEqB,OAAQ,SAAUC,OAAO,EAAMC,QAASP,IAAqBD,GAA2B,CAC1FJ,SAAU,SAAkBa,GAC1B,IAAIC,EAAOpB,EAASE,EAAuBmB,OAC3CpB,EAAWkB,GACX,IAAIG,EAAcC,UAAUC,OAAS,EAAID,UAAU,QAAKE,EACpDC,EAAMN,EAAKI,OACXG,OAAsBF,IAAhBH,EAA4BI,EAAMlB,EAAIT,EAASuB,GAAcI,GACnEE,EAAS5B,EAASmB,GACtB,OAAOd,EACHA,EAAYe,EAAMQ,EAAQD,GAC1BpB,EAAMa,EAAMO,EAAMC,EAAOJ,OAAQG,KAASC,M,oCCnClD,W,ykCCKA,IAOIC,EAPGC,EAAoBC,QAErBC,EAAQC,iBACRC,EAAMC,eAAIH,EAAMI,OAAOF,KACvBG,EAAOF,eAAIH,EAAMI,OAAOC,MACxBC,EAAaH,eAAI,IACjBI,EAAOJ,iBAETK,GAAQ,EACZC,IAEAC,gBACI,SAAAC,GAAC,OAAGX,EAAMI,OAAOC,OACjBI,GAIJ,IAAMG,EAAU,SAAAD,GACZ,IAAME,EAAON,EAAKO,MAAMC,cACxB,MAAa,OAARF,EAAqB,UACb,OAARA,EAAqB,YACb,OAARA,EAAqB,SACb,OAARA,EAAqB,UACnB,cAGX,SAASJ,IAEDD,IACAA,GAAQ,EACRH,EAAKS,MAAQd,EAAMI,OAAOC,KAC1BH,EAAIY,MAAQd,EAAMI,OAAOF,IAEzBL,EAAWmB,YAAYP,EAAe,MAE1CQ,MAAM,GAAD,OAAInB,EAAJ,0BAAsCI,EAAIY,MAA1C,YAAmDT,EAAKS,QACxDI,MAAK,SAAAC,GAAI,OAAEA,EAAKC,UAChBF,MAAK,SAAAC,GACFb,EAAWQ,MAAQK,EAAKE,SACxBd,EAAKO,MAAQK,EAAKd,KAClBE,EAAKO,MAAMQ,SAAWV,IACtBL,EAAKO,MAAMS,QAAU,QACH,OAAdrB,EAAIY,QAAiBP,EAAKO,MAAMS,QAAU,aACzChB,EAAKO,MAAMU,QAAQC,cAAc5B,M,+zDC1ClD,MAAM6B,EAA2B,IAAgB,EAAQ,CAAC,CAAC,YAAY,qBAExD,gB","file":"js/chat.0aa814d7.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\n// eslint-disable-next-line es/no-string-prototype-endswith -- safe\nvar un$EndsWith = uncurryThis(''.endsWith);\nvar slice = uncurryThis(''.slice);\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.endsWith` method\n// https://tc39.es/ecma262/#sec-string.prototype.endswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = toString(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = that.length;\n    var end = endPosition === undefined ? len : min(toLength(endPosition), len);\n    var search = toString(searchString);\n    return un$EndsWith\n      ? un$EndsWith(that, search, end)\n      : slice(that, end - search.length, end) === search;\n  }\n});\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./ChatTranscript.vue?vue&type=style&index=0&id=7a3e2e88&lang=scss&scoped=true\"","<script setup>\r\n\r\nimport {ref, watch} from 'vue'\r\nimport {useRoute} from 'vue-router'\r\nimport {DateTime} from 'luxon'\r\nconst {VUE_APP_API_ROOT} = process.env\r\n\r\nconst route = useRoute()\r\nconst bot = ref(route.params.bot)\r\nconst chat = ref(route.params.chat)\r\nconst transcript = ref([])\r\nconst meta = ref()\r\nlet interval;\r\nlet first = true\r\ngetTranscript();\r\n\r\nwatch(\r\n    _=> route.params.chat,\r\n    getTranscript\r\n\r\n)\r\n//https://app.kindly.ai/workspace/2348/inbox/chat/637c8362ed96928c0ad3dcee\r\nconst getLang = _=>{\r\n    const code = meta.value.language_code\r\n    if ( code=== 'sv') return 'Swedish'\r\n    if ( code=== 'nb') return 'Norwegian'\r\n    if ( code=== 'da') return 'Danish'\r\n    if ( code=== 'fi') return 'Finnish'\r\n    return 'Jibberish '\r\n}\r\n\r\nfunction getTranscript(){\r\n    //console.log('Run');\r\n    if (first){\r\n        first = false\r\n        chat.value = route.params.chat\r\n        bot.value = route.params.bot\r\n        //console.log('first');\r\n        interval = setInterval(getTranscript, 10000)\r\n    }\r\n    fetch(`${VUE_APP_API_ROOT}chattranscript/${bot.value}/${chat.value}`)\r\n        .then(data=>data.json())\r\n        .then(data=>{\r\n            transcript.value = data.messages\r\n            meta.value = data.chat\r\n            meta.value.language = getLang()\r\n            meta.value.botname = 'Elbot'\r\n            if (bot.value === 2398 ) meta.value.botname = 'Gigabotti'\r\n            if (!meta.value.active) clearInterval(interval)\r\n            //console.log({meta, transcript});\r\n        })\r\n}\r\n\r\n\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div class=\"meta\" v-if=\"meta\">\r\n        <div class=\"flex\">\r\n            <div class=\"label\">Language</div>\r\n            <div class=\"value\">{{meta.language}} </div>\r\n        </div>\r\n        <div v-if=\"meta.context.agentDisplayName\" class='flex'>\r\n            <div class=\"label\">Agent name</div>\r\n            <div class=\"value\">{{meta.context.agentDisplayName}} </div>\r\n        </div>\r\n        <div v-if=\"meta.context.takeover_email && !meta.context.takeover_email.endsWith('kindlyid')\" class='flex'>\r\n            <div class=\"label\">Customer email</div>\r\n            <div class=\"value\">{{meta.context.takeover_email}} </div>\r\n        </div>\r\n        <div v-else class='flex'>\r\n            <div class=\"label\">Customer</div>\r\n            <div class=\"value\">Anonymous</div>\r\n        </div>\r\n        <div class=\"flex\">\r\n            {{DateTime.fromISO(meta.created).toFormat(\"DDD @TTT\")}}\r\n        </div> \r\n        <div class=\"flex\" v-if=\"meta.active\">\r\n            ONGOING CHAT... Transcript will refresh every 10 seconds\r\n        </div>\r\n        <div class=\"flex\" v-else>\r\n            Chat completed\r\n        </div>\r\n    </div>\r\n    <div class=\"meta\" v-else>\r\n        Loading {{chat}} for {{bot}}\r\n    </div>\r\n\r\n    <div class=\"transcript\" v-if=\"transcript.length\">\r\n        <div class=\"message\" v-for=\"message in transcript\">\r\n            <div class=\"info\">\r\n                <div class=\"sender BOT\" v-if=\"message.sender=='BOT'\">{{meta.botname}}</div>\r\n                <div class=\"sender AGENT\" v-else-if=\"message.sender=='AGENT'\">{{message.name}}</div>\r\n                <div class=\"sender SYSTEM\" v-else-if=\"message.sender=='SYSTEM'\">Automatic message</div>\r\n                <div class=\"sender\" v-else>Customer</div>\r\n                <div class=\"time\">{{DateTime.fromISO(message.created).toFormat(\"@TT\")}}</div>\r\n            </div>\r\n            <div class=\"text\" :class=\"message.sender\" v-html=\"message.message\"></div>\r\n        </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n    .meta {\r\n        margin-inline: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        //border: 1px solid white;\r\n        max-width: 400px;\r\n        .flex {\r\n            display: flex;\r\n            margin-block: 0.5rem;\r\n            > div{\r\n                margin-inline: 1rem;\r\n            }\r\n            .label {\r\n                align-self: flex-end;\r\n            }\r\n            .value {\r\n                align-self: flex-start;\r\n            }\r\n        }\r\n    }\r\n    .transcript {\r\n\r\n        .message {\r\n            margin: 1rem 3rem;\r\n            display: grid;\r\n            grid-template-columns: 100px auto;\r\n            .text {\r\n                &.BOT {\r\n                    background: #{lighten($brand-color, 10%)};\r\n                    color: white;\r\n                }\r\n                &.AGENT {\r\n                    background: #{lighten($secondary-brand-color, 10%)};\r\n                    color: white;\r\n                }\r\n                &.SYSTEM {\r\n                    background: #{lighten($bar-font-color, 10%)};\r\n                }\r\n                &.USER {\r\n                    background: #{lighten($pop-brand-color, 10%)};\r\n                    color: white;\r\n                }\r\n\r\n                text-align: left;\r\n                border: 1px solid white;\r\n                border-radius: 1rem 1rem 1rem 0;\r\n                padding: 0.5rem;\r\n                background: white;\r\n                color: black;\r\n            }\r\n            .info {\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: space-around;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n","import script from \"./ChatTranscript.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatTranscript.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatTranscript.vue?vue&type=style&index=0&id=7a3e2e88&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\node-projects\\\\cc365-DB\\\\client\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7a3e2e88\"]])\n\nexport default __exports__"],"sourceRoot":""}